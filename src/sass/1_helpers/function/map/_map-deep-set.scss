@charset 'UTF-8';

/// Map deep set - Update a key deeply nested
///
/// @group map
///
/// @param {Map} $map - Map to update
/// @param {Arglist} $keys - Keys to access to value to update
/// @param {*} $value - New value (last member of `$keys`)
/// @return {Map} - Updated map
///
/// @author Hugo Giraudel

@function map-deep-set($map, $keys...

/*, $value */
) {
    $map-list: ($map, );
    $result: null;

    @if length($keys)==2 {
        @return map-merge($map, (nth($keys, 1): nth($keys, -1)));
    }

    @for $i from 1 through length($keys) - 2 {
        $map-list: append($map-list, map-get(nth($map-list, -1), nth($keys, $i)));
    }

    @for $i from length($map-list) through 1 {
        $result: map-merge(nth($map-list, $i), (nth($keys, $i): if($i==length($map-list), nth($keys, -1), $result)));
    }

    @return $result;
}