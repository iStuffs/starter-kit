@charset 'UTF-8';

/// List sort - Sorts values of `$list` using quick-sort algorithm using `$order`.
///
/// @group list
///
/// @ignore Documentation: http://at-import.github.io/SassyLists/documentation/#function-list-sort
///
/// @requires str-compare
/// @requires list-has-multiple-values
/// @requires list-to-list
///
/// @param {List} $list  - list to sort
/// @param {List} $order - order to respect
///
/// @example
/// list-sort(b a c)
/// // a b c
///
/// @example
/// list-sort(3 5 1)
/// // 1 3 5
///
/// @return {List}
///

@function list-sort($list, $order: '!''#''$''%''&''\'''('')''*''+'',''-''.''/''[''\\'']''^''_''{''|''}''~''0''1''2''3''4''5''6''7''8''9''a''b''c''d''e''f''g''h''i''j''k''l''m''n''o''p''q''r''s''t''u''v''w''x''y''z') {
    $_: missing-dependencies('list-str-compare', 'list-has-multiple-values', 'list-to-list');

    $less: ();
    $equal: ();
    $large: ();

    @if list-has-multiple-values($list) {
        $seed: nth($list, ceil(length($list) / 2));

        @each $item in $list {
            @if $item==$seed {
                $equal: append($equal, $item, list-separator($list));
            }

            @else if list-str-compare($item, $seed, $order) {
                $less: append($less, $item, list-separator($list));
            }

            @else if not list-str-compare($item, $seed, $order) {
                $large: append($large, $item, list-separator($list));
            }
        }

        @return join(join(list-sort($less, $order), $equal), list-sort($large, $order));
    }

    @return list-to-list($list);
}