@charset 'UTF-8';
////
/// Extends default css easings
///
/// @group variables
/// @author [Samuel DIDIER-LAURENT](https://github.com/iStuffs)
////

// theses are constants and should not be overided
$LINEAR: cubic-bezier(0.250, 0.250, 0.750, 0.750) !global;
$EASE: cubic-bezier(0.250, 0.100, 0.250, 1.000) !global;
$EASE-IN: cubic-bezier(0.420, 0.000, 1.000, 1.000) !global;
$EASE-OUT: cubic-bezier(0.000, 0.000, 0.580, 1.000) !global;
$EASE-IN-OUT: cubic-bezier(0.420, 0.000, 0.580, 1.000) !global;

$EASE-IN-QUAD: cubic-bezier(0.550, 0.085, 0.680, 0.530) !global;
$EASE-IN-CUBIC: cubic-bezier(0.550, 0.055, 0.675, 0.190) !global;
$EASE-IN-QUART: cubic-bezier(0.895, 0.030, 0.685, 0.220) !global;
$EASE-IN-QUINT: cubic-bezier(0.755, 0.050, 0.855, 0.060) !global;
$EASE-IN-SINE: cubic-bezier(0.470, 0.000, 0.745, 0.715) !global;
$EASE-IN-EXPO: cubic-bezier(0.950, 0.050, 0.795, 0.035) !global;
$EASE-IN-CIRC: cubic-bezier(0.600, 0.040, 0.980, 0.335) !global;
$EASE-IN-BACK: cubic-bezier(0.600, -0.280, 0.735, 0.04) !global;

$EASE-OUT-QUAD: cubic-bezier(0.250, 0.460, 0.450, 0.940) !global;
$EASE-OUT-CUBIC: cubic-bezier(0.215, 0.610, 0.355, 1.000) !global;
$EASE-OUT-QUART: cubic-bezier(0.165, 0.840, 0.440, 1.000) !global;
$EASE-OUT-QUINT: cubic-bezier(0.230, 1.000, 0.320, 1.000) !global;
$EASE-OUT-SINE: cubic-bezier(0.390, 0.575, 0.565, 1.000) !global;
$EASE-OUT-EXPO: cubic-bezier(0.190, 1.000, 0.220, 1.000) !global;
$EASE-OUT-CIRC: cubic-bezier(0.075, 0.820, 0.165, 1.000) !global;
$EASE-OUT-BACK: cubic-bezier(0.175, 0.885, 0.320, 1.275) !global;

$EASE-IN-OUT-QUAD: cubic-bezier(0.455, 0.030, 0.515, 0.955) !global;
$EASE-IN-OUT-CUBIC: cubic-bezier(0.645, 0.045, 0.355, 1.000) !global;
$EASE-IN-OUT-QUART: cubic-bezier(0.770, 0.000, 0.175, 1.000) !global;
$EASE-IN-OUT-QUINT: cubic-bezier(0.860, 0.000, 0.070, 1.000) !global;
$EASE-IN-OUT-SINE: cubic-bezier(0.445, 0.050, 0.550, 0.950) !global;
$EASE-IN-OUT-EXPO: cubic-bezier(1.000, 0.000, 0.000, 1.000) !global;
$EASE-IN-OUT-CIRC: cubic-bezier(0.785, 0.135, 0.150, 0.860) !global;
$EASE-IN-OUT-BACK: cubic-bezier(0.680, -0.550, 0.265, 1.550) !global;

$EASINGS: (
    'linear': $LINEAR,
    'ease': $EASE,
    'ease-in': $EASE-IN,
    'ease-out': $EASE-OUT,
    'ease-in-out': $EASE-IN-OUT,

    'ease-in-quad': $EASE-IN-QUAD,
    'ease-in-cubic': $EASE-IN-CUBIC,
    'ease-in-quart': $EASE-IN-QUART,
    'ease-in-quint': $EASE-IN-QUINT,
    'ease-in-sine': $EASE-IN-SINE,
    'ease-in-expo': $EASE-IN-EXPO,
    'ease-in-circ': $EASE-IN-CIRC,
    'ease-in-back': $EASE-IN-BACK,

    'ease-out-quad': $EASE-OUT-QUAD,
    'ease-out-cubic': $EASE-OUT-CUBIC,
    'ease-out-quart': $EASE-OUT-QUART,
    'ease-out-quint': $EASE-OUT-QUINT,
    'ease-out-sine': $EASE-OUT-SINE,
    'ease-out-expo': $EASE-OUT-EXPO,
    'ease-out-circ': $EASE-OUT-CIRC,
    'ease-out-back': $EASE-OUT-BACK,

    'ease-in-out-cubic' : $EASE-IN-OUT-CUBIC,
    'ease-in-out-quad' : $EASE-IN-OUT-QUAD,
    'ease-in-out-quart' : $EASE-IN-OUT-QUART,
    'ease-in-out-quint' : $EASE-IN-OUT-QUINT,
    'ease-in-out-sine' : $EASE-IN-OUT-SINE,
    'ease-in-out-expo' : $EASE-IN-OUT-EXPO,
    'ease-in-out-circ' : $EASE-IN-OUT-CIRC,
    'ease-in-out-back' :  $EASE-IN-OUT-BACK
) !default;

/// returns the value of the asked key for the `$EASINGS` map
/// @param { String } $key ['ease'] - map key to search
/// @return { String | null }
/// @throw warning if `$EASINGS` doesn't exists or isn't a map
/// @throw warning if the key `$key` doesn't exist in the map `$EASINGS`

@function easing($key: 'ease'){
    @if type-of($EASINGS) != map {
        @warn "There is no `$EASINGS` map.";
    } @else if not map-has-key($EASINGS, $key) {
        @warn "No easing type found for `#{$key}` in `$EASINGS` map.";
    } @else {
        @return map-get($EASINGS, $key );
    }
    @return null;
}
